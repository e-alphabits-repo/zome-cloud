# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  #pull_request:
   # branches: [ "main"]
  # [workflow_dispatch]
jobs:
  test:
    strategy:
        matrix:
         include:
         - chromedriverVersion: "2.28"
           apiLevel: 29
           emuTag: default

    env:
      CI: true
      ANDROID_AVD: emulator
      APPIUM_TEST_SERVER_PORT: 4723
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      _FORCE_LOGS: 1
    # No hardware acceleration is available for emulators on Ubuntu:
    # https://github.com/marketplace/actions/android-emulator-runner#can-i-use-this-action-on-linux-vms
    runs-on: macos-latest # the machine type
    steps:
    - uses: actions/checkout@v2 #checkout the code
    - name: Set up JDK 15
      uses: actions/setup-java@v1
      with:
        java-version: 19
    - name: Install and Run Appium Server
      run: |
        chmod +x ./scripts/RunAppiumServer.sh # install and run appium server in the background
        ./scripts/RunAppiumServer.sh
   
    - name: Run Appium Tests
      uses: reactivecircus/android-emulator-runner@v2 # install and create the Emulator
      with:
        api-level: ${{ matrix.apiLevel }}
        target: ${{ matrix.emutag }}
        arch: x86_64
        profile: pixel_6
        script: mvn clean install # running our test with info to check the results


